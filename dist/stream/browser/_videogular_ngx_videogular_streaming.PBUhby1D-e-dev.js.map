{
  "version": 3,
  "sources": ["../../@videogular/ngx-videogular/fesm2022/videogular-ngx-videogular-streaming.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@videogular/ngx-videogular/core';\nimport { VgCoreModule } from '@videogular/ngx-videogular/core';\nclass VgDashDirective {\n  constructor(ref, API) {\n    this.ref = ref;\n    this.API = API;\n    this.onGetBitrates = new EventEmitter();\n    this.subscriptions = [];\n  }\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n  onPlayerReady() {\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n    this.target = this.API.getMediaById(this.vgFor);\n    this.createPlayer();\n  }\n  ngOnChanges(changes) {\n    changes.vgDash?.currentValue ? this.createPlayer() : this.destroyPlayer();\n  }\n  createPlayer() {\n    if (this.dash) {\n      this.destroyPlayer();\n    }\n    // It's a DASH source\n    if (this.vgDash && (this.vgDash.indexOf('.mpd') > -1 || this.vgDash.indexOf('mpd-time-csf') > -1)) {\n      let drmOptions;\n      if (this.vgDRMLicenseServer) {\n        drmOptions = this.vgDRMLicenseServer;\n        if (this.vgDRMToken) {\n          for (const drmServer in drmOptions) {\n            if (drmServer.hasOwnProperty(drmServer)) {\n              drmOptions[drmServer].httpRequestHeaders = {\n                Authorization: this.vgDRMToken\n              };\n            }\n          }\n        }\n      }\n      this.dash = dashjs.MediaPlayer().create();\n      this.dash.updateSettings({\n        debug: {\n          logLevel: dashjs.Debug.LOG_LEVEL_NONE\n        }\n      });\n      this.dash.initialize(this.ref.nativeElement);\n      this.dash.setAutoPlay(false);\n      this.dash.on(dashjs.MediaPlayer.events.STREAM_INITIALIZED, () => {\n        const audioList = this.dash.getBitrateInfoListFor('audio');\n        const videoList = this.dash.getBitrateInfoListFor('video');\n        if (audioList.length > 1) {\n          audioList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          audioList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            scanType: 'AUTO'\n          });\n          this.onGetBitrates.emit(audioList);\n        }\n        if (videoList.length > 1) {\n          videoList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          videoList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            scanType: 'AUTO'\n          });\n          this.onGetBitrates.emit(videoList);\n        }\n      });\n      if (drmOptions) {\n        this.dash.setProtectionData(drmOptions);\n      }\n      this.dash.attachSource(this.vgDash);\n    } else {\n      if (this.target) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgDash;\n      }\n    }\n  }\n  setBitrate({\n    mediaType,\n    qualityIndex\n  }) {\n    if (this.dash) {\n      if (qualityIndex > 0) {\n        if (this.dash.getSettings()) {\n          this.dash.updateSettings({\n            streaming: {\n              abr: {\n                autoSwitchBitrate: {\n                  [mediaType]: false\n                }\n              }\n            }\n          });\n        }\n        const nextIndex = qualityIndex - 1;\n        this.dash.setQualityFor(mediaType, nextIndex);\n      } else {\n        this.dash.updateSettings({\n          streaming: {\n            abr: {\n              autoSwitchBitrate: {\n                [mediaType]: true\n              }\n            }\n          }\n        });\n      }\n    }\n  }\n  destroyPlayer() {\n    if (this.dash) {\n      this.dash.reset();\n      this.dash = null;\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275fac = function VgDashDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VgDashDirective)(i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i1.VgApiService));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n      type: VgDashDirective,\n      selectors: [[\"\", \"vgDash\", \"\"]],\n      inputs: {\n        vgDash: \"vgDash\",\n        vgDRMToken: \"vgDRMToken\",\n        vgDRMLicenseServer: \"vgDRMLicenseServer\"\n      },\n      outputs: {\n        onGetBitrates: \"onGetBitrates\"\n      },\n      exportAs: [\"vgDash\"],\n      features: [i0.\u0275\u0275NgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(VgDashDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgDash]',\n      exportAs: 'vgDash'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.VgApiService\n  }], {\n    vgDash: [{\n      type: Input\n    }],\n    vgDRMToken: [{\n      type: Input\n    }],\n    vgDRMLicenseServer: [{\n      type: Input\n    }],\n    onGetBitrates: [{\n      type: Output\n    }]\n  });\n})();\nclass VgHlsDirective {\n  constructor(ref, API) {\n    this.ref = ref;\n    this.API = API;\n    this.vgHlsHeaders = {};\n    this.onGetBitrates = new EventEmitter();\n    this.subscriptions = [];\n  }\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n  onPlayerReady() {\n    this.crossorigin = this.ref.nativeElement.getAttribute('crossorigin');\n    this.preload = this.ref.nativeElement.getAttribute('preload') !== 'none';\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n    if (this.vgFor) {\n      this.target = this.API.getMediaById(this.vgFor);\n    } else {\n      this.target = this.API.getDefaultMedia();\n    }\n    this.config = {\n      autoStartLoad: this.preload,\n      xhrSetup: xhr => {\n        // Send cookies\n        if (this.crossorigin === 'use-credentials') {\n          xhr.withCredentials = true;\n        }\n        for (const key of Object.keys(this.vgHlsHeaders)) {\n          xhr.setRequestHeader(key, this.vgHlsHeaders[key]);\n        }\n      },\n      ...this.config\n    };\n    this.createPlayer();\n    if (!this.preload) {\n      this.subscriptions.push(this.API.subscriptions.play.subscribe(() => {\n        if (this.hls) {\n          this.hls.startLoad(0);\n        }\n      }));\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes.vgHls?.currentValue) {\n      this.createPlayer();\n    } else if (changes.vgHlsHeaders && changes.vgHlsHeaders.currentValue) {\n      // Do nothing. We don't want to create a or destroy a player if the headers change.\n    } else {\n      this.destroyPlayer();\n    }\n  }\n  createPlayer() {\n    if (this.hls) {\n      this.destroyPlayer();\n    }\n    // It's a HLS source\n    if (this.vgHls && this.vgHls.indexOf('m3u8') > -1 && Hls.isSupported() && this.API.isPlayerReady) {\n      const video = this.ref.nativeElement;\n      this.hls = new Hls(this.config);\n      // @ts-ignore\n      this.hls.on(Hls.Events.MANIFEST_PARSED, (_event, data) => {\n        const videoList = [];\n        videoList.push({\n          qualityIndex: 0,\n          width: 0,\n          height: 0,\n          bitrate: 0,\n          mediaType: 'video',\n          label: 'AUTO'\n        });\n        data.levels.forEach((item, index) => {\n          videoList.push({\n            qualityIndex: ++index,\n            width: item.width,\n            height: item.height,\n            bitrate: item.bitrate,\n            mediaType: 'video',\n            label: item.name\n          });\n        });\n        this.onGetBitrates.emit(videoList);\n      });\n      // @ts-ignore\n      this.hls.on(Hls.Events.LEVEL_LOADED, (_event, data) => {\n        this.target.isLive = data.details.live;\n      });\n      this.hls.loadSource(this.vgHls);\n      this.hls.attachMedia(video);\n    } else {\n      if (this.target && !!this.target.pause) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgHls;\n      }\n    }\n  }\n  setBitrate(bitrate) {\n    if (this.hls) {\n      this.hls.nextLevel = bitrate.qualityIndex - 1;\n    }\n  }\n  destroyPlayer() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n    delete this.hls;\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275fac = function VgHlsDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VgHlsDirective)(i0.\u0275\u0275directiveInject(i0.ElementRef), i0.\u0275\u0275directiveInject(i1.VgApiService));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275dir = /* @__PURE__ */i0.\u0275\u0275defineDirective({\n      type: VgHlsDirective,\n      selectors: [[\"\", \"vgHls\", \"\"]],\n      inputs: {\n        vgHls: \"vgHls\",\n        vgHlsHeaders: \"vgHlsHeaders\",\n        config: \"config\"\n      },\n      outputs: {\n        onGetBitrates: \"onGetBitrates\"\n      },\n      exportAs: [\"vgHls\"],\n      features: [i0.\u0275\u0275NgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(VgHlsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgHls]',\n      exportAs: 'vgHls'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.VgApiService\n  }], {\n    vgHls: [{\n      type: Input\n    }],\n    vgHlsHeaders: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    onGetBitrates: [{\n      type: Output\n    }]\n  });\n})();\nclass VgStreamingModule {\n  /** @nocollapse */static {\n    this.\u0275fac = function VgStreamingModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VgStreamingModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275mod = /* @__PURE__ */i0.\u0275\u0275defineNgModule({\n      type: VgStreamingModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275inj = /* @__PURE__ */i0.\u0275\u0275defineInjector({\n      imports: [CommonModule, VgCoreModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(VgStreamingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, VgCoreModule],\n      declarations: [VgDashDirective, VgHlsDirective],\n      exports: [VgDashDirective, VgHlsDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VgDashDirective, VgHlsDirective, VgStreamingModule };\n"],
  "mappings": "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",
  "names": []
}

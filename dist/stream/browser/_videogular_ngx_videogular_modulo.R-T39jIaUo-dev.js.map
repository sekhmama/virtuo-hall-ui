{
  "version": 3,
  "sources": ["../../@videogular/ngx-videogular/fesm2022/videogular-ngx-videogular-modulo.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"waveCanvas\"];\nconst AudioContext = window[\"AudioContext\"] || window[\"webkitAudioContext\"];\nclass Gondolo {\n  constructor(audio, ctx, opts) {\n    if (!(this instanceof Gondolo)) {\n      return new Gondolo(audio, ctx, opts);\n    }\n    if (!(ctx instanceof AudioContext)) {\n      opts = ctx, ctx = null;\n    }\n    opts = opts || {};\n    this.ctx = ctx = ctx || new AudioContext();\n    if (!(audio instanceof AudioNode)) {\n      audio = audio instanceof Audio || audio instanceof HTMLAudioElement ? ctx.createMediaElementSource(audio) : ctx.createMediaStreamSource(audio);\n    }\n    this.audioConfigStateResolver(ctx, opts, audio);\n    this.audioConfigStateParser(ctx);\n  }\n  waveform(output, channel) {\n    if (!output) {\n      output = this.wavedata || (this.wavedata = new Uint8Array((this.analyser[0] || this.analyser).frequencyBinCount));\n    }\n    const analyser = this.stereo ? this.analyser[channel || 0] : this.analyser;\n    analyser.getByteTimeDomainData(output);\n    return output;\n  }\n  frequencies(output, channel) {\n    if (!output) {\n      output = this.freqdata || (this.freqdata = new Uint8Array((this.analyser[0] || this.analyser).frequencyBinCount));\n    }\n    const analyser = this.stereo ? this.analyser[channel || 0] : this.analyser;\n    analyser.getByteFrequencyData(output);\n    return output;\n  }\n  audioConfigStateResolver(ctx, opts, audio) {\n    this.analyser = ctx.createAnalyser();\n    this.stereo = !!opts.stereo;\n    this.audible = opts.audible !== false;\n    this.wavedata = null;\n    this.freqdata = null;\n    this.splitter = null;\n    this.merger = null;\n    this.source = audio;\n  }\n  audioConfigStateParser(ctx) {\n    if (!this.stereo) {\n      this.output = this.source;\n      this.source.connect(this.analyser[0] || this.analyser);\n      if (this.audible) {\n        (this.analyser[0] || this.analyser).connect(ctx.destination);\n      }\n    } else {\n      this.analyser = [this.analyser[0] || this.analyser];\n      this.analyser.push(ctx.createAnalyser());\n      this.splitter = ctx.createChannelSplitter(2);\n      this.merger = ctx.createChannelMerger(2);\n      this.output = this.merger;\n      this.source.connect(this.splitter);\n      for (let i = 0; i < 2; i++) {\n        this.splitter.connect(this.analyser[i], i, 0);\n        this.analyser[i].connect(this.merger, 0, i);\n      }\n      if (this.audible) {\n        this.merger.connect(ctx.destination);\n      }\n    }\n  }\n}\nclass VgModuloComponent {\n  startVisualizer() {\n    if (!this._audioAnalyser) {\n      this._audioAnalyser = new Gondolo(this.audioElement);\n      const {\n        width,\n        height\n      } = this.moduloConfig.dimensions;\n      const canvasElement = this.waveCanvas.nativeElement;\n      this._ctx = canvasElement.getContext(\"2d\");\n      canvasElement.width = width;\n      canvasElement.height = height;\n    }\n    this.update();\n  }\n  update() {\n    const audioFreq = this._audioAnalyser.waveform();\n    const {\n      fillStyle,\n      strokeStyle,\n      lineWidth,\n      scaleFactor\n    } = this.moduloConfig;\n    const {\n      width,\n      height\n    } = this.waveCanvas.nativeElement;\n    // Clear canvas\n    this._ctx.fillStyle = fillStyle;\n    this._ctx.fillRect(0, 0, width, height);\n    this._ctx.strokeStyle = strokeStyle;\n    this._ctx.lineWidth = lineWidth;\n    // Draw frequency lines\n    this._ctx.beginPath();\n    this._ctx.moveTo(0, height / 2 - audioFreq[0] * scaleFactor);\n    for (let i = 0; i < audioFreq.length; i++) {\n      this._ctx.lineTo(width / audioFreq.length * i, height / 2 - audioFreq[i] * scaleFactor);\n    }\n    this._ctx.moveTo(0, height / 2 + audioFreq[0] * scaleFactor);\n    for (let i = 0; i < audioFreq.length; i++) {\n      this._ctx.lineTo(width / audioFreq.length * i, height / 2 + audioFreq[i] * scaleFactor);\n    }\n    this._ctx.stroke();\n    window.requestAnimationFrame(() => this.update());\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275fac = function VgModuloComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VgModuloComponent)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275cmp = /* @__PURE__ */i0.\u0275\u0275defineComponent({\n      type: VgModuloComponent,\n      selectors: [[\"vg-modulo\"]],\n      viewQuery: function VgModuloComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.\u0275\u0275viewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.\u0275\u0275queryRefresh(_t = i0.\u0275\u0275loadQuery()) && (ctx.waveCanvas = _t.first);\n        }\n      },\n      inputs: {\n        moduloConfig: \"moduloConfig\",\n        audioElement: \"audioElement\"\n      },\n      decls: 2,\n      vars: 0,\n      consts: [[\"waveCanvas\", \"\"]],\n      template: function VgModuloComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.\u0275\u0275element(0, \"canvas\", null, 0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(VgModuloComponent, [{\n    type: Component,\n    args: [{\n      selector: \"vg-modulo\",\n      template: \"<canvas #waveCanvas></canvas>\\n\"\n    }]\n  }], null, {\n    moduloConfig: [{\n      type: Input\n    }],\n    audioElement: [{\n      type: Input\n    }],\n    waveCanvas: [{\n      type: ViewChild,\n      args: [\"waveCanvas\", {\n        static: false\n      }]\n    }]\n  });\n})();\nclass VgModuloModule {\n  /** @nocollapse */static {\n    this.\u0275fac = function VgModuloModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VgModuloModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275mod = /* @__PURE__ */i0.\u0275\u0275defineNgModule({\n      type: VgModuloModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.\u0275inj = /* @__PURE__ */i0.\u0275\u0275defineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.\u0275setClassMetadata(VgModuloModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [VgModuloComponent],\n      exports: [VgModuloComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Gondolo, VgModuloComponent, VgModuloModule };\n"],
  "mappings": "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",
  "names": []
}

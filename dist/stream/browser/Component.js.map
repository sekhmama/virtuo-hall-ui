{
  "version": 3,
  "sources": ["../../../projects/stream/src/app/app.component.ts", "../../../projects/stream/src/app/app.component.html", "../../../projects/stream/src/app/api.service.ts", "../../../projects/stream/src/environments/environment.ts", "../../../projects/stream/src/app/meeting-room/meeting-room.component.ts", "../../../projects/stream/src/app/meeting-room/meeting-room.component.html", "../../../projects/stream/src/app/vedio-player/vedio-player.component.ts", "../../../projects/stream/src/app/vedio-player/vedio-player.component.html"],
  "sourcesContent": ["import { Component, inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { MeetingRoomComponent } from './meeting-room/meeting-room.component';\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-stream-root',\n  standalone: true,\n  imports: [RouterOutlet, MeetingRoomComponent, CommonModule, ReactiveFormsModule],\n  providers: [ApiService],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  title = 'stream';\n  isLoginFormActive = true;\n  loginForm: any;\n  logined = false;\n  constructor(\n    private apiService: ApiService,) {\n  }\n\n\n  ngOnInit() {\n    // this.logined = this.apiService.logined;\n    this.loginForm = new FormGroup({\n      username: new FormControl({ value: '', disabled: false }, [\n        Validators.required, Validators.minLength(3)\n      ]),\n      code: new FormControl({ value: '', disabled: false }, [Validators.required])\n    });\n\n    // Get and parse data from localStorage\n    const userData = localStorage.getItem('userData');\n    if (userData) {\n      this.logined = true;\n      const parsedUserData = JSON.parse(userData);\n      console.log(parsedUserData.username);  // Output: 'john_doe'\n    }\n\n\n  }\n  onSubmit() {\n    this.loginForm.patchValue({\n      username: this.loginForm.controls['username']?.value?.trim(),\n      code: this.loginForm.controls['code']?.value?.trim()\n    }); if (this.loginForm.valid) {\n      console.log('Login successful');\n      this.apiService.vedioSrc= this.loginForm.controls['code']?.value?.trim();\n      // const user = { username: this.loginForm.controls['username']?.value?.trim(), code: this.loginForm.controls['code']?.value?.trim() };\n      // localStorage.setItem('userData', JSON.stringify(user));\n      this.logined = true;\n      // Implement your login logic here\n    } else {\n      console.log('Please fill in both fields');\n    }\n  }\n  changePage(e: boolean) {\n    // if(this.isLoginFormActive !== e){\n    //   this.loginForm.reset();\n    //   this.isLoginFormActive = e;\n    // }\n  }\n  endSession(){\n    this.logined = false;\n  }\n}\n", "<app-stream-meeting-room (logined)=\"endSession()\" *ngIf=\"logined\"></app-stream-meeting-room>\n\n<div class=\"modal-overlay\" *ngIf=\"!logined\">\n  <div class=\"modal-content\">\n    <form [formGroup]=\"loginForm\" id=\"qwerty\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input id=\"username\" formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Enter your username\" />\n        <div *ngIf=\"loginForm.controls['username'].invalid && loginForm.controls['username'].touched\" class=\"error\">\n          <small *ngIf=\"loginForm.controls['username'].hasError('required')\">Username is required.</small>\n          <small *ngIf=\"loginForm.controls['username'].hasError('minlength')\">Username must be at least 3 characters long.</small>\n        </div>\n      </div>\n\n      <div class=\"form-group\" *ngIf=\"isLoginFormActive\">\n        <label for=\"code\">Code</label>\n        <input id=\"code\" formControlName=\"code\" type=\"code\" class=\"form-control\" placeholder=\"Enter your code\" />\n        <div *ngIf=\"loginForm.controls['code'].invalid && loginForm.controls['code'].touched\" class=\"error\">\n          <small *ngIf=\"loginForm.controls['code'].hasError('required')\">Code is required.</small>\n        </div>\n      </div>\n\n      <button type=\"submit\" *ngIf=\"isLoginFormActive\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\">Join</button>\n      <button type=\"submit\" *ngIf=\"!isLoginFormActive\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\">Create</button>\n    </form>\n\n    <!-- Tabs to toggle between Login and Register forms, now below the buttons -->\n    <div class=\"tabs\">\n      <button (click)=\"changePage(false)\" id=\"join\" [class.active]=\"isLoginFormActive\">Join Room</button>\n      <!-- <button (click)=\"changePage(true)\" id=\"create\" [class.active]=\"!isLoginFormActive\">Create Room</button> -->\n      <button id=\"create\" [class.active]=\"!isLoginFormActive\">Create Room</button>\n    </div>\n  </div>\n</div>\n\n", "import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private apiUrl = environment.apiUrl;\n  public vedioSrc = '';\n\n  constructor(private http: HttpClient) { }\n\n  getData() {\n    return this.http.get(`${this.apiUrl}/data`);\n  }\n\n  writeServer(body: any){\n    return this.http.post(`${this.apiUrl}/users/dummy`, body);\n  }\n}\n", "export const environment = {\n    production: false,\n    apiUrl: 'http://localhost:1022'\n  };\n  ", "import { CommonModule, NgClass, NgComponentOutlet } from '@angular/common';\nimport { Component, EventEmitter, Output, output } from '@angular/core';\nimport { VedioPlayerComponent } from '../vedio-player/vedio-player.component';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-stream-meeting-room',\n  standalone: true,\n  imports: [CommonModule,VedioPlayerComponent],\n  templateUrl: './meeting-room.component.html',\n  styleUrl: './meeting-room.component.scss'\n})\nexport class MeetingRoomComponent {\n  @Output() logined = new EventEmitter();\n  isVideoActive = true; // Set to false if you want to hide the video\n  isChatOpen = false; // Toggle to hide/show chat\n  isControlsVisible = true; // Toggle to hide/show control buttons\n  message:any;\n  chatMessages=\n  [\n    { text: 'Hi, welcome to public player', sender: 'Coder' },\n  ];\n\n    constructor(\n      private apiService: ApiService,) {\n    }\n  participants = [\n    { id: 1, name: 'Participant 1' },\n    { id: 1, name: 'Participant 1' },\n    { id: 1, name: 'Participant 1' },\n  ];\n\n  onMessage(e:any){\n    this.message=e;\n  }\n\n  // Toggle visibility of chat\n  toggleChat() {\n    this.isChatOpen = !this.isChatOpen;\n  }\n  sendMessage() {\n    this.chatMessages.push({text: this.message.target.value, sender: 'You'});\n    const input: any = document.getElementById('mess');\n    this.message.target.value = '';\n  }\n  toggleMute() {\n  }\n  endCall() {\n    this.logined.emit(false);\n    }\n  // Dynamic calculation of video size based on participant count\n  get participantVideoSize() {\n    const participantCount = this.participants.length;\n    if (participantCount <= 4) return '25%'; // 4 or fewer participants get larger videos\n    if (participantCount <= 8) return '20%'; // Between 5 and 8 participants\n    return '15%'; // More than 8 participants, videos become smaller\n  }\n}\n", "\n\n<!-- <div class=\"app-container\">\n    \n    <div class=\"video-main\">\n        <div class=\"video-player\">\n\n            <app-stream-vedio-player *ngIf=\"isVideoActive\"></app-stream-vedio-player>\n        </div>\n    </div>\n\n\n    <div class=\"chat-container\">\n        <div class=\"chat-header\">\n            Chat\n        </div>\n        <div class=\"chat-body\">\n\n            <div *ngFor=\"let message of chatMessages\" class=\"chat-message\">\n                <strong>{{ message.sender }}</strong>: {{ message.text }}\n            </div>\n        </div>\n        <div class=\"chat-footer\">\n            <input type=\"text\" placeholder=\"Type a message...\" />\n            <button (click)=\"sendMessage()\">Send</button>\n        </div>\n    </div>\n\n    <div class=\"controls-bar\" *ngIf=\"isControlsVisible\">\n        <button (click)=\"toggleMute()\">Mute</button>\n        <button (click)=\"endCall()\">End</button>\n    </div>\n</div> -->\n\n\n\n  <!-- app.component.html -->\n<div class=\"app-container\">\n    <!-- Main Video Section -->\n    <div class=\"video-main\">\n      <div class=\"video-player\">\n        <!-- Main Video Player Here -->\n        <app-stream-vedio-player *ngIf=\"isVideoActive\"></app-stream-vedio-player>\n      </div>\n    </div>\n  \n    <!-- Chat Panel -->\n    <div class=\"chat-container\" *ngIf=\"isChatOpen\">\n      <!-- Close Button -->\n      <button class=\"close-btn\" (click)=\"toggleChat()\">Ã—</button>\n  \n      <div class=\"chat-header\">\n        Chat\n      </div>\n      <div class=\"chat-body\">\n        <!-- Chat messages will go here -->\n        <div *ngFor=\"let message of chatMessages; let i = index\" class=\"chat-message\">\n            <strong *ngIf=\"chatMessages[i-1]?.sender !== message.sender\">{{ message.sender }}:</strong> {{ message.text }}\n        </div>\n      </div>\n      <div class=\"chat-footer\">\n        <input (keyup.enter)=\"sendMessage()\" id=\"mess\" type=\"text\" (input)=\"onMessage($event)\" placeholder=\"Type a message\" />\n        <button (click)=\"sendMessage()\">Send</button>\n      </div>\n    </div>\n  \n    <!-- Control Buttons at the Bottom -->\n    <div class=\"controls-bar\">\n      <!-- <button>Mic</button>\n      <button>Video</button> -->\n      <button (click)=\"toggleChat()\">Chat</button>\n      <button style=\"background-color: red;\"(click)=\"endCall()\">End</button>\n    </div>\n  </div>\n  \n  \n  \n  ", "import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { VgBufferingModule } from '@videogular/ngx-videogular/buffering';\nimport { VgOverlayPlayModule } from '@videogular/ngx-videogular/overlay-play';\nimport { VgApiService, VgCoreModule } from '@videogular/ngx-videogular/core';\nimport { VgControlsModule } from '@videogular/ngx-videogular/controls';\nimport Hls from 'hls.js';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-stream-vedio-player',\n  standalone: true,\n  imports: [CommonModule, VgBufferingModule, VgOverlayPlayModule, VgControlsModule, VgCoreModule,\n  ],\n  templateUrl: './vedio-player.component.html',\n  styleUrl: './vedio-player.component.scss'\n})\nexport class VedioPlayerComponent implements AfterViewInit {\n  @ViewChild('media') media: any;\n  preload: string = 'auto';\n  api: VgApiService = new VgApiService;  // Reference to the API service\n  maxScreen = false;\n  inactivityTimeout: any = '';\n  inactivityDelay = 5000; // Time in ms (2 seconds)\n    constructor(\n      private apiService: ApiService,) {\n    }\n\n  ngAfterViewInit() {\n    // Initialize HLS.js for the video player\n    if (Hls.isSupported()) {\n      // const hls = new Hls();\n      var hls = new Hls({\n        xhrSetup: function (xhr, url) {\n          // Add CORS headers directly if needed (e.g., 'withCredentials' or custom headers)\n          xhr.withCredentials = false;  // This will not include credentials (cookies, etc.)\n        }\n      });\n      const videoSource = this.apiService.vedioSrc;\n      // const videoSource = 'http://localhost:1022/uploads/movies/747a6f78-97f7-4d8f-80f6-d6b4d260dfdf/index.m3u8';\n      // const videoSource = \"https://pub-6a5a4a5605cc43d28de03fc16552e0ea.r2.dev/movies/1c8791c1-fd13-4cd9-af88-60bc120f0971/index.m3u8\";\n      // const videoSource = \"https://pub-6a5a4a5605cc43d28de03fc16552e0ea.r2.dev/movies/8a28b17d-7a18-40d0-91a3-02928912d3df/index.m3u8\";\n      hls.loadSource(videoSource);\n      hls.attachMedia(this.media.nativeElement);\n\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        this.media.nativeElement.play(); // Automatically play once the video metadata is parsed\n      });\n\n      hls.on(Hls.Events.ERROR, (event: any, data: any) => {\n        console.error('Error while loading HLS:', data);\n      });\n    } else {\n      console.error('HLS.js is not supported in this browser');\n    }\n  }\n\n  // This function is called once the player is ready\n  onPlayerReady(api: VgApiService) {\n    this.api = api;  // Storing the API instance\n    console.log(this.api);\n    this.subscribeToPlayerEvents();  // Subscribe to events after initialization\n  }\n\n  // Function to subscribe to player events\n  private subscribeToPlayerEvents() {\n    // Ensure that media is ready before subscribing to loadedMetadata\n    if (this.api && this.api.getDefaultMedia()) {\n      // Subscribe to 'loadedMetadata' event when the media is ready\n      this.api.getDefaultMedia().subscriptions.loadedMetadata.subscribe(() => {\n        this.autoplay.bind(this);\n      });\n    } else {\n      console.error('Media element is not ready yet.');\n    }\n  }\n\n  // Autoplay function\n  autoplay() {\n    if (this.api) {\n      this.api.play();  // Play the video once metadata is loaded\n    }\n  }\n\n  // Move backward by 30 seconds\n  backward() {\n    const currentTime = this.api.currentTime;\n    this.api.seekTime(currentTime - 10, false); // The second parameter 'true' triggers the seek animation.\n  }\n\n  // Move forward by 30 seconds\n  forward() {\n    const currentTime = this.api.currentTime;\n    this.api.seekTime(currentTime + 10, false);\n  }\n\n  fullScreen() {\n    this.maxScreen = !this.maxScreen;\n    const video: any = document.querySelector('player');\n    console.log(video); \n    if (this.maxScreen) {\n\n\n      // Hide cursor when video enters full-screen\n      // document.addEventListener('fullscreenchange', () => {\n      //   if (document.fullscreenElement) {\n          // video.style.cursor = 'pointer'; // Hide cursor\n          this.resetInactivityTimer(video); // Start inactivity timer\n      //   } else {\n      //     video.style.cursor = 'auto'; // Show cursor when exiting full-screen\n      //   }\n      // });\n\n      // For Webkit-based browsers (Safari/Chrome)\n      // document.addEventListener('webkitfullscreenchange', () => {\n      //   if (document.webkitFullscreenElement) {\n      //     video.style.cursor = 'none'; // Hide cursor\n      //     this.resetInactivityTimer(video); // Start inactivity timer\n      //   } else {\n      //     video.style.cursor = 'auto'; // Show cursor when exiting full-screen\n      //   }\n      // });\n\n      // Event listener to detect mouse movements\n      // video.addEventListener('mousemove', () => {\n      //   video.style.cursor = 'auto'; // Show cursor on movement\n      //   this.resetInactivityTimer(video); // Reset inactivity timer on movement\n      // });\n\n      // // Optional: Reset cursor when the video is clicked or interacted with\n      // video.addEventListener('click', () => {\n      //   video.style.cursor = 'auto'; // Show cursor on click\n      //   this.resetInactivityTimer(video); // Reset inactivity timer\n      // });\n    } else {\n      // video.style.cursor = 'pointer';\n    }\n\n  }\n  resetInactivityTimer(video: any) {\n    // Clear any existing timeout\n    clearTimeout(this.inactivityTimeout);\n\n    // Set a new timeout to hide the cursor after inactivity\n    this.inactivityTimeout = setTimeout(() => {\n      // video.style.cursor = 'none'; // Hide cursor after inactivity\n      // video.style.cursor = 'none';\n      console.log(video.children.style);\n    }, this.inactivityDelay);\n  }\n}\n\n\n\n\n\n\n\n", "<!-- <div style=\"width: 700px;height : 350px;position: relative;\">\n    <h1 style=\"text-align:center;\">Video player</h1> -->\n        <vg-player id=\"singleVideo3\" (onPlayerReady)=\"onPlayerReady($event)\">\n            <vg-overlay-play id=\"player\"></vg-overlay-play>\n            <vg-buffering vgFor=\"singleVideo\" ></vg-buffering>\n            <vg-controls id=\"control\">\n                <vg-play-pause id=\"play\"></vg-play-pause>\n                <vg-playback-button id=\"speed\"></vg-playback-button>\n                \n                <vg-time-display vgProperty=\"current\" vgFormat=\"mm:ss\"></vg-time-display>\n                \n                <!-- Custom Controls for Forward and Backward -->\n                <!-- <div> -->\n                    <!-- <i class=\"fa fa-backward\" style=\"font-size:24px\"></i> -->\n                    <span class=\"btn\" [title]=\"'-10s'\" (click)=\"backward()\" ><<</span>\n                    \n                    <span class=\"btn\" [title]=\"'+10s'\" (click)=\"forward()\">>></span>\n                <!-- </div> -->\n                \n                <vg-scrub-bar [vgSlider]=\"true\">\n                    <vg-scrub-bar-current-time class=\"scroll\" [vgSlider]=\"true\"></vg-scrub-bar-current-time>\n                    <vg-scrub-bar-buffering-time ></vg-scrub-bar-buffering-time>\n                </vg-scrub-bar>\n                <!-- <vg-scrub-bar style=\"pointer-events: none;\"></vg-scrub-bar> -->\n                <!-- <vg-time-display vgProperty=\"left\" vgFormat=\"mm:ss\"></vg-time-display> -->\n                <vg-time-display vgProperty=\"total\" vgFormat=\"mm:ss\"></vg-time-display>\n                \n                <!-- <vg-track-selector></vg-track-selector> -->\n                <vg-mute id=\"mute\"></vg-mute>\n                <vg-volume id=\"volume\"></vg-volume>\n                \n                <vg-fullscreen id=\"fullscreen\" (click)=\"fullScreen()\"></vg-fullscreen>\n            </vg-controls>\n     \n           \n            <video #media [vgMedia]=\"$any(media)\"  id=\"singleVideo\" [preload]=\"preload\" crossorigin=\"anonymous\">\n                <!-- <source src=\"http://localhost:1022/uploads/movies/1eb04757-197e-4b7a-a838-f980ffd29414/index.m3u8\" type=\"application/x-mpegURL\"> -->\n                <!-- <source src=\"http://static.videogular.com/assets/videos/videogular.mp4\" type=\"video/mp4\">\n                <source src=\"http://static.videogular.com/assets/videos/videogular.ogg\" type=\"video/ogg\">\n                <source src=\"http://static.videogular.com/assets/videos/videogular.webm\" type=\"video/webm\">\n        \n                <track kind=\"subtitles\" label=\"English\" src=\"http://static.videogular.com/assets/subs/pale-blue-dot.vtt\" srclang=\"en\" default>\n                <track kind=\"subtitles\" label=\"EspaÃ±ol\" src=\"http://static.videogular.com/assets/subs/pale-blue-dot-es.vtt\" srclang=\"es\"> -->\n            </video>\n            \n        </vg-player>\n<!-- </div> -->"],
  "mappings": "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",
  "names": ["Component", "CommonModule", "Component", "CommonModule", "CommonModule", "CommonModule"]
}

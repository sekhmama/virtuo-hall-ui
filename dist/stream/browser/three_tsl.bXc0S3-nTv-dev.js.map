{
  "version": 3,
  "sources": ["../../three/build/three.tsl.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nimport { TSL } from 'three/webgpu';\nconst BRDF_GGX = TSL.BRDF_GGX;\nconst BRDF_Lambert = TSL.BRDF_Lambert;\nconst BasicShadowFilter = TSL.BasicShadowFilter;\nconst Break = TSL.Break;\nconst Continue = TSL.Continue;\nconst DFGApprox = TSL.DFGApprox;\nconst D_GGX = TSL.D_GGX;\nconst Discard = TSL.Discard;\nconst EPSILON = TSL.EPSILON;\nconst F_Schlick = TSL.F_Schlick;\nconst Fn = TSL.Fn;\nconst INFINITY = TSL.INFINITY;\nconst If = TSL.If;\nconst Loop = TSL.Loop;\nconst NodeShaderStage = TSL.NodeShaderStage;\nconst NodeType = TSL.NodeType;\nconst NodeUpdateType = TSL.NodeUpdateType;\nconst NodeAccess = TSL.NodeAccess;\nconst PCFShadowFilter = TSL.PCFShadowFilter;\nconst PCFSoftShadowFilter = TSL.PCFSoftShadowFilter;\nconst PI = TSL.PI;\nconst PI2 = TSL.PI2;\nconst Return = TSL.Return;\nconst Schlick_to_F0 = TSL.Schlick_to_F0;\nconst ScriptableNodeResources = TSL.ScriptableNodeResources;\nconst ShaderNode = TSL.ShaderNode;\nconst TBNViewMatrix = TSL.TBNViewMatrix;\nconst VSMShadowFilter = TSL.VSMShadowFilter;\nconst V_GGX_SmithCorrelated = TSL.V_GGX_SmithCorrelated;\nconst abs = TSL.abs;\nconst acesFilmicToneMapping = TSL.acesFilmicToneMapping;\nconst acos = TSL.acos;\nconst add = TSL.add;\nconst addNodeElement = TSL.addNodeElement;\nconst agxToneMapping = TSL.agxToneMapping;\nconst all = TSL.all;\nconst alphaT = TSL.alphaT;\nconst and = TSL.and;\nconst anisotropy = TSL.anisotropy;\nconst anisotropyB = TSL.anisotropyB;\nconst anisotropyT = TSL.anisotropyT;\nconst any = TSL.any;\nconst append = TSL.append;\nconst arrayBuffer = TSL.arrayBuffer;\nconst asin = TSL.asin;\nconst assign = TSL.assign;\nconst atan = TSL.atan;\nconst atan2 = TSL.atan2;\nconst atomicAdd = TSL.atomicAdd;\nconst atomicAnd = TSL.atomicAnd;\nconst atomicFunc = TSL.atomicFunc;\nconst atomicMax = TSL.atomicMax;\nconst atomicMin = TSL.atomicMin;\nconst atomicOr = TSL.atomicOr;\nconst atomicStore = TSL.atomicStore;\nconst atomicSub = TSL.atomicSub;\nconst atomicXor = TSL.atomicXor;\nconst attenuationColor = TSL.attenuationColor;\nconst attenuationDistance = TSL.attenuationDistance;\nconst attribute = TSL.attribute;\nconst attributeArray = TSL.attributeArray;\nconst backgroundBlurriness = TSL.backgroundBlurriness;\nconst backgroundIntensity = TSL.backgroundIntensity;\nconst backgroundRotation = TSL.backgroundRotation;\nconst batch = TSL.batch;\nconst billboarding = TSL.billboarding;\nconst bitAnd = TSL.bitAnd;\nconst bitNot = TSL.bitNot;\nconst bitOr = TSL.bitOr;\nconst bitXor = TSL.bitXor;\nconst bitangentGeometry = TSL.bitangentGeometry;\nconst bitangentLocal = TSL.bitangentLocal;\nconst bitangentView = TSL.bitangentView;\nconst bitangentWorld = TSL.bitangentWorld;\nconst bitcast = TSL.bitcast;\nconst blendBurn = TSL.blendBurn;\nconst blendColor = TSL.blendColor;\nconst blendDodge = TSL.blendDodge;\nconst blendOverlay = TSL.blendOverlay;\nconst blendScreen = TSL.blendScreen;\nconst blur = TSL.blur;\nconst bool = TSL.bool;\nconst buffer = TSL.buffer;\nconst bufferAttribute = TSL.bufferAttribute;\nconst bumpMap = TSL.bumpMap;\nconst burn = TSL.burn;\nconst bvec2 = TSL.bvec2;\nconst bvec3 = TSL.bvec3;\nconst bvec4 = TSL.bvec4;\nconst bypass = TSL.bypass;\nconst cache = TSL.cache;\nconst call = TSL.call;\nconst cameraFar = TSL.cameraFar;\nconst cameraNear = TSL.cameraNear;\nconst cameraNormalMatrix = TSL.cameraNormalMatrix;\nconst cameraPosition = TSL.cameraPosition;\nconst cameraProjectionMatrix = TSL.cameraProjectionMatrix;\nconst cameraProjectionMatrixInverse = TSL.cameraProjectionMatrixInverse;\nconst cameraViewMatrix = TSL.cameraViewMatrix;\nconst cameraWorldMatrix = TSL.cameraWorldMatrix;\nconst cbrt = TSL.cbrt;\nconst cdl = TSL.cdl;\nconst ceil = TSL.ceil;\nconst checker = TSL.checker;\nconst cineonToneMapping = TSL.cineonToneMapping;\nconst clamp = TSL.clamp;\nconst clearcoat = TSL.clearcoat;\nconst clearcoatRoughness = TSL.clearcoatRoughness;\nconst code = TSL.code;\nconst color = TSL.color;\nconst colorSpaceToWorking = TSL.colorSpaceToWorking;\nconst colorToDirection = TSL.colorToDirection;\nconst compute = TSL.compute;\nconst cond = TSL.cond;\nconst context = TSL.context;\nconst convert = TSL.convert;\nconst convertColorSpace = TSL.convertColorSpace;\nconst convertToTexture = TSL.convertToTexture;\nconst cos = TSL.cos;\nconst cross = TSL.cross;\nconst cubeTexture = TSL.cubeTexture;\nconst dFdx = TSL.dFdx;\nconst dFdy = TSL.dFdy;\nconst dashSize = TSL.dashSize;\nconst defaultBuildStages = TSL.defaultBuildStages;\nconst defaultShaderStages = TSL.defaultShaderStages;\nconst defined = TSL.defined;\nconst degrees = TSL.degrees;\nconst deltaTime = TSL.deltaTime;\nconst densityFog = TSL.densityFog;\nconst densityFogFactor = TSL.densityFogFactor;\nconst depth = TSL.depth;\nconst depthPass = TSL.depthPass;\nconst difference = TSL.difference;\nconst diffuseColor = TSL.diffuseColor;\nconst directPointLight = TSL.directPointLight;\nconst directionToColor = TSL.directionToColor;\nconst dispersion = TSL.dispersion;\nconst distance = TSL.distance;\nconst div = TSL.div;\nconst dodge = TSL.dodge;\nconst dot = TSL.dot;\nconst drawIndex = TSL.drawIndex;\nconst dynamicBufferAttribute = TSL.dynamicBufferAttribute;\nconst element = TSL.element;\nconst emissive = TSL.emissive;\nconst equal = TSL.equal;\nconst equals = TSL.equals;\nconst equirectUV = TSL.equirectUV;\nconst exp = TSL.exp;\nconst exp2 = TSL.exp2;\nconst expression = TSL.expression;\nconst faceDirection = TSL.faceDirection;\nconst faceForward = TSL.faceForward;\nconst faceforward = TSL.faceforward;\nconst float = TSL.float;\nconst floor = TSL.floor;\nconst fog = TSL.fog;\nconst fract = TSL.fract;\nconst frameGroup = TSL.frameGroup;\nconst frameId = TSL.frameId;\nconst frontFacing = TSL.frontFacing;\nconst fwidth = TSL.fwidth;\nconst gain = TSL.gain;\nconst gapSize = TSL.gapSize;\nconst getConstNodeType = TSL.getConstNodeType;\nconst getCurrentStack = TSL.getCurrentStack;\nconst getDirection = TSL.getDirection;\nconst getDistanceAttenuation = TSL.getDistanceAttenuation;\nconst getGeometryRoughness = TSL.getGeometryRoughness;\nconst getNormalFromDepth = TSL.getNormalFromDepth;\nconst getParallaxCorrectNormal = TSL.getParallaxCorrectNormal;\nconst getRoughness = TSL.getRoughness;\nconst getScreenPosition = TSL.getScreenPosition;\nconst getShIrradianceAt = TSL.getShIrradianceAt;\nconst getTextureIndex = TSL.getTextureIndex;\nconst getViewPosition = TSL.getViewPosition;\nconst glsl = TSL.glsl;\nconst glslFn = TSL.glslFn;\nconst grayscale = TSL.grayscale;\nconst greaterThan = TSL.greaterThan;\nconst greaterThanEqual = TSL.greaterThanEqual;\nconst hash = TSL.hash;\nconst highpModelNormalViewMatrix = TSL.highpModelNormalViewMatrix;\nconst highpModelViewMatrix = TSL.highpModelViewMatrix;\nconst hue = TSL.hue;\nconst instance = TSL.instance;\nconst instanceIndex = TSL.instanceIndex;\nconst instancedArray = TSL.instancedArray;\nconst instancedBufferAttribute = TSL.instancedBufferAttribute;\nconst instancedDynamicBufferAttribute = TSL.instancedDynamicBufferAttribute;\nconst instancedMesh = TSL.instancedMesh;\nconst int = TSL.int;\nconst inverseSqrt = TSL.inverseSqrt;\nconst inversesqrt = TSL.inversesqrt;\nconst invocationLocalIndex = TSL.invocationLocalIndex;\nconst invocationSubgroupIndex = TSL.invocationSubgroupIndex;\nconst ior = TSL.ior;\nconst iridescence = TSL.iridescence;\nconst iridescenceIOR = TSL.iridescenceIOR;\nconst iridescenceThickness = TSL.iridescenceThickness;\nconst ivec2 = TSL.ivec2;\nconst ivec3 = TSL.ivec3;\nconst ivec4 = TSL.ivec4;\nconst js = TSL.js;\nconst label = TSL.label;\nconst length = TSL.length;\nconst lengthSq = TSL.lengthSq;\nconst lessThan = TSL.lessThan;\nconst lessThanEqual = TSL.lessThanEqual;\nconst lightPosition = TSL.lightPosition;\nconst lightTargetDirection = TSL.lightTargetDirection;\nconst lightTargetPosition = TSL.lightTargetPosition;\nconst lightViewPosition = TSL.lightViewPosition;\nconst lightingContext = TSL.lightingContext;\nconst lights = TSL.lights;\nconst linearDepth = TSL.linearDepth;\nconst linearToneMapping = TSL.linearToneMapping;\nconst localId = TSL.localId;\nconst log = TSL.log;\nconst log2 = TSL.log2;\nconst logarithmicDepthToViewZ = TSL.logarithmicDepthToViewZ;\nconst loop = TSL.loop;\nconst luminance = TSL.luminance;\nconst mediumpModelViewMatrix = TSL.mediumpModelViewMatrix;\nconst mat2 = TSL.mat2;\nconst mat3 = TSL.mat3;\nconst mat4 = TSL.mat4;\nconst matcapUV = TSL.matcapUV;\nconst materialAO = TSL.materialAO;\nconst materialAlphaTest = TSL.materialAlphaTest;\nconst materialAnisotropy = TSL.materialAnisotropy;\nconst materialAnisotropyVector = TSL.materialAnisotropyVector;\nconst materialAttenuationColor = TSL.materialAttenuationColor;\nconst materialAttenuationDistance = TSL.materialAttenuationDistance;\nconst materialClearcoat = TSL.materialClearcoat;\nconst materialClearcoatNormal = TSL.materialClearcoatNormal;\nconst materialClearcoatRoughness = TSL.materialClearcoatRoughness;\nconst materialColor = TSL.materialColor;\nconst materialDispersion = TSL.materialDispersion;\nconst materialEmissive = TSL.materialEmissive;\nconst materialIOR = TSL.materialIOR;\nconst materialIridescence = TSL.materialIridescence;\nconst materialIridescenceIOR = TSL.materialIridescenceIOR;\nconst materialIridescenceThickness = TSL.materialIridescenceThickness;\nconst materialLightMap = TSL.materialLightMap;\nconst materialLineDashOffset = TSL.materialLineDashOffset;\nconst materialLineDashSize = TSL.materialLineDashSize;\nconst materialLineGapSize = TSL.materialLineGapSize;\nconst materialLineScale = TSL.materialLineScale;\nconst materialLineWidth = TSL.materialLineWidth;\nconst materialMetalness = TSL.materialMetalness;\nconst materialNormal = TSL.materialNormal;\nconst materialOpacity = TSL.materialOpacity;\nconst materialPointWidth = TSL.materialPointWidth;\nconst materialReference = TSL.materialReference;\nconst materialReflectivity = TSL.materialReflectivity;\nconst materialRefractionRatio = TSL.materialRefractionRatio;\nconst materialRotation = TSL.materialRotation;\nconst materialRoughness = TSL.materialRoughness;\nconst materialSheen = TSL.materialSheen;\nconst materialSheenRoughness = TSL.materialSheenRoughness;\nconst materialShininess = TSL.materialShininess;\nconst materialSpecular = TSL.materialSpecular;\nconst materialSpecularColor = TSL.materialSpecularColor;\nconst materialSpecularIntensity = TSL.materialSpecularIntensity;\nconst materialSpecularStrength = TSL.materialSpecularStrength;\nconst materialThickness = TSL.materialThickness;\nconst materialTransmission = TSL.materialTransmission;\nconst max = TSL.max;\nconst maxMipLevel = TSL.maxMipLevel;\nconst metalness = TSL.metalness;\nconst min = TSL.min;\nconst mix = TSL.mix;\nconst mixElement = TSL.mixElement;\nconst mod = TSL.mod;\nconst modInt = TSL.modInt;\nconst modelDirection = TSL.modelDirection;\nconst modelNormalMatrix = TSL.modelNormalMatrix;\nconst modelPosition = TSL.modelPosition;\nconst modelScale = TSL.modelScale;\nconst modelViewMatrix = TSL.modelViewMatrix;\nconst modelViewPosition = TSL.modelViewPosition;\nconst modelViewProjection = TSL.modelViewProjection;\nconst modelWorldMatrix = TSL.modelWorldMatrix;\nconst modelWorldMatrixInverse = TSL.modelWorldMatrixInverse;\nconst morphReference = TSL.morphReference;\nconst mrt = TSL.mrt;\nconst mul = TSL.mul;\nconst mx_aastep = TSL.mx_aastep;\nconst mx_cell_noise_float = TSL.mx_cell_noise_float;\nconst mx_contrast = TSL.mx_contrast;\nconst mx_fractal_noise_float = TSL.mx_fractal_noise_float;\nconst mx_fractal_noise_vec2 = TSL.mx_fractal_noise_vec2;\nconst mx_fractal_noise_vec3 = TSL.mx_fractal_noise_vec3;\nconst mx_fractal_noise_vec4 = TSL.mx_fractal_noise_vec4;\nconst mx_hsvtorgb = TSL.mx_hsvtorgb;\nconst mx_noise_float = TSL.mx_noise_float;\nconst mx_noise_vec3 = TSL.mx_noise_vec3;\nconst mx_noise_vec4 = TSL.mx_noise_vec4;\nconst mx_ramplr = TSL.mx_ramplr;\nconst mx_ramptb = TSL.mx_ramptb;\nconst mx_rgbtohsv = TSL.mx_rgbtohsv;\nconst mx_safepower = TSL.mx_safepower;\nconst mx_splitlr = TSL.mx_splitlr;\nconst mx_splittb = TSL.mx_splittb;\nconst mx_srgb_texture_to_lin_rec709 = TSL.mx_srgb_texture_to_lin_rec709;\nconst mx_transform_uv = TSL.mx_transform_uv;\nconst mx_worley_noise_float = TSL.mx_worley_noise_float;\nconst mx_worley_noise_vec2 = TSL.mx_worley_noise_vec2;\nconst mx_worley_noise_vec3 = TSL.mx_worley_noise_vec3;\nconst negate = TSL.negate;\nconst neutralToneMapping = TSL.neutralToneMapping;\nconst nodeArray = TSL.nodeArray;\nconst nodeImmutable = TSL.nodeImmutable;\nconst nodeObject = TSL.nodeObject;\nconst nodeObjects = TSL.nodeObjects;\nconst nodeProxy = TSL.nodeProxy;\nconst normalFlat = TSL.normalFlat;\nconst normalGeometry = TSL.normalGeometry;\nconst normalLocal = TSL.normalLocal;\nconst normalMap = TSL.normalMap;\nconst normalView = TSL.normalView;\nconst normalWorld = TSL.normalWorld;\nconst normalize = TSL.normalize;\nconst not = TSL.not;\nconst notEqual = TSL.notEqual;\nconst numWorkgroups = TSL.numWorkgroups;\nconst objectDirection = TSL.objectDirection;\nconst objectGroup = TSL.objectGroup;\nconst objectPosition = TSL.objectPosition;\nconst objectScale = TSL.objectScale;\nconst objectViewPosition = TSL.objectViewPosition;\nconst objectWorldMatrix = TSL.objectWorldMatrix;\nconst oneMinus = TSL.oneMinus;\nconst or = TSL.or;\nconst orthographicDepthToViewZ = TSL.orthographicDepthToViewZ;\nconst oscSawtooth = TSL.oscSawtooth;\nconst oscSine = TSL.oscSine;\nconst oscSquare = TSL.oscSquare;\nconst oscTriangle = TSL.oscTriangle;\nconst output = TSL.output;\nconst outputStruct = TSL.outputStruct;\nconst overlay = TSL.overlay;\nconst overloadingFn = TSL.overloadingFn;\nconst parabola = TSL.parabola;\nconst parallaxDirection = TSL.parallaxDirection;\nconst parallaxUV = TSL.parallaxUV;\nconst parameter = TSL.parameter;\nconst pass = TSL.pass;\nconst passTexture = TSL.passTexture;\nconst pcurve = TSL.pcurve;\nconst perspectiveDepthToViewZ = TSL.perspectiveDepthToViewZ;\nconst pmremTexture = TSL.pmremTexture;\nconst pointUV = TSL.pointUV;\nconst pointWidth = TSL.pointWidth;\nconst positionGeometry = TSL.positionGeometry;\nconst positionLocal = TSL.positionLocal;\nconst positionPrevious = TSL.positionPrevious;\nconst positionView = TSL.positionView;\nconst positionViewDirection = TSL.positionViewDirection;\nconst positionWorld = TSL.positionWorld;\nconst positionWorldDirection = TSL.positionWorldDirection;\nconst posterize = TSL.posterize;\nconst pow = TSL.pow;\nconst pow2 = TSL.pow2;\nconst pow3 = TSL.pow3;\nconst pow4 = TSL.pow4;\nconst property = TSL.property;\nconst radians = TSL.radians;\nconst rand = TSL.rand;\nconst range = TSL.range;\nconst rangeFog = TSL.rangeFog;\nconst rangeFogFactor = TSL.rangeFogFactor;\nconst reciprocal = TSL.reciprocal;\nconst reference = TSL.reference;\nconst referenceBuffer = TSL.referenceBuffer;\nconst reflect = TSL.reflect;\nconst reflectVector = TSL.reflectVector;\nconst reflectView = TSL.reflectView;\nconst reflector = TSL.reflector;\nconst refract = TSL.refract;\nconst refractVector = TSL.refractVector;\nconst refractView = TSL.refractView;\nconst reinhardToneMapping = TSL.reinhardToneMapping;\nconst remainder = TSL.remainder;\nconst remap = TSL.remap;\nconst remapClamp = TSL.remapClamp;\nconst renderGroup = TSL.renderGroup;\nconst renderOutput = TSL.renderOutput;\nconst rendererReference = TSL.rendererReference;\nconst rotate = TSL.rotate;\nconst rotateUV = TSL.rotateUV;\nconst roughness = TSL.roughness;\nconst round = TSL.round;\nconst rtt = TSL.rtt;\nconst sRGBTransferEOTF = TSL.sRGBTransferEOTF;\nconst sRGBTransferOETF = TSL.sRGBTransferOETF;\nconst sampler = TSL.sampler;\nconst saturate = TSL.saturate;\nconst saturation = TSL.saturation;\nconst screen = TSL.screen;\nconst screenCoordinate = TSL.screenCoordinate;\nconst screenSize = TSL.screenSize;\nconst screenUV = TSL.screenUV;\nconst scriptable = TSL.scriptable;\nconst scriptableValue = TSL.scriptableValue;\nconst select = TSL.select;\nconst setCurrentStack = TSL.setCurrentStack;\nconst shaderStages = TSL.shaderStages;\nconst shadow = TSL.shadow;\nconst shadowPositionWorld = TSL.shadowPositionWorld;\nconst sharedUniformGroup = TSL.sharedUniformGroup;\nconst sheen = TSL.sheen;\nconst sheenRoughness = TSL.sheenRoughness;\nconst shiftLeft = TSL.shiftLeft;\nconst shiftRight = TSL.shiftRight;\nconst shininess = TSL.shininess;\nconst sign = TSL.sign;\nconst sin = TSL.sin;\nconst sinc = TSL.sinc;\nconst skinning = TSL.skinning;\nconst skinningReference = TSL.skinningReference;\nconst smoothstep = TSL.smoothstep;\nconst smoothstepElement = TSL.smoothstepElement;\nconst specularColor = TSL.specularColor;\nconst specularF90 = TSL.specularF90;\nconst spherizeUV = TSL.spherizeUV;\nconst split = TSL.split;\nconst spritesheetUV = TSL.spritesheetUV;\nconst sqrt = TSL.sqrt;\nconst stack = TSL.stack;\nconst step = TSL.step;\nconst storage = TSL.storage;\nconst storageBarrier = TSL.storageBarrier;\nconst storageObject = TSL.storageObject;\nconst storageTexture = TSL.storageTexture;\nconst string = TSL.string;\nconst sub = TSL.sub;\nconst subgroupIndex = TSL.subgroupIndex;\nconst subgroupSize = TSL.subgroupSize;\nconst tan = TSL.tan;\nconst tangentGeometry = TSL.tangentGeometry;\nconst tangentLocal = TSL.tangentLocal;\nconst tangentView = TSL.tangentView;\nconst tangentWorld = TSL.tangentWorld;\nconst temp = TSL.temp;\nconst texture = TSL.texture;\nconst texture3D = TSL.texture3D;\nconst textureBarrier = TSL.textureBarrier;\nconst textureBicubic = TSL.textureBicubic;\nconst textureCubeUV = TSL.textureCubeUV;\nconst textureLoad = TSL.textureLoad;\nconst textureSize = TSL.textureSize;\nconst textureStore = TSL.textureStore;\nconst thickness = TSL.thickness;\nconst threshold = TSL.threshold;\nconst time = TSL.time;\nconst timerDelta = TSL.timerDelta;\nconst timerGlobal = TSL.timerGlobal;\nconst timerLocal = TSL.timerLocal;\nconst toOutputColorSpace = TSL.toOutputColorSpace;\nconst toWorkingColorSpace = TSL.toWorkingColorSpace;\nconst toneMapping = TSL.toneMapping;\nconst toneMappingExposure = TSL.toneMappingExposure;\nconst toonOutlinePass = TSL.toonOutlinePass;\nconst transformDirection = TSL.transformDirection;\nconst transformNormal = TSL.transformNormal;\nconst transformNormalToView = TSL.transformNormalToView;\nconst transformedBentNormalView = TSL.transformedBentNormalView;\nconst transformedBitangentView = TSL.transformedBitangentView;\nconst transformedBitangentWorld = TSL.transformedBitangentWorld;\nconst transformedClearcoatNormalView = TSL.transformedClearcoatNormalView;\nconst transformedNormalView = TSL.transformedNormalView;\nconst transformedNormalWorld = TSL.transformedNormalWorld;\nconst transformedTangentView = TSL.transformedTangentView;\nconst transformedTangentWorld = TSL.transformedTangentWorld;\nconst transmission = TSL.transmission;\nconst transpose = TSL.transpose;\nconst tri = TSL.tri;\nconst tri3 = TSL.tri3;\nconst triNoise3D = TSL.triNoise3D;\nconst triplanarTexture = TSL.triplanarTexture;\nconst triplanarTextures = TSL.triplanarTextures;\nconst trunc = TSL.trunc;\nconst tslFn = TSL.tslFn;\nconst uint = TSL.uint;\nconst uniform = TSL.uniform;\nconst uniformArray = TSL.uniformArray;\nconst uniformGroup = TSL.uniformGroup;\nconst uniforms = TSL.uniforms;\nconst userData = TSL.userData;\nconst uv = TSL.uv;\nconst uvec2 = TSL.uvec2;\nconst uvec3 = TSL.uvec3;\nconst uvec4 = TSL.uvec4;\nconst varying = TSL.varying;\nconst varyingProperty = TSL.varyingProperty;\nconst vec2 = TSL.vec2;\nconst vec3 = TSL.vec3;\nconst vec4 = TSL.vec4;\nconst vectorComponents = TSL.vectorComponents;\nconst velocity = TSL.velocity;\nconst vertexColor = TSL.vertexColor;\nconst vertexIndex = TSL.vertexIndex;\nconst vibrance = TSL.vibrance;\nconst viewZToLogarithmicDepth = TSL.viewZToLogarithmicDepth;\nconst viewZToOrthographicDepth = TSL.viewZToOrthographicDepth;\nconst viewZToPerspectiveDepth = TSL.viewZToPerspectiveDepth;\nconst viewport = TSL.viewport;\nconst viewportBottomLeft = TSL.viewportBottomLeft;\nconst viewportCoordinate = TSL.viewportCoordinate;\nconst viewportDepthTexture = TSL.viewportDepthTexture;\nconst viewportLinearDepth = TSL.viewportLinearDepth;\nconst viewportMipTexture = TSL.viewportMipTexture;\nconst viewportResolution = TSL.viewportResolution;\nconst viewportSafeUV = TSL.viewportSafeUV;\nconst viewportSharedTexture = TSL.viewportSharedTexture;\nconst viewportSize = TSL.viewportSize;\nconst viewportTexture = TSL.viewportTexture;\nconst viewportTopLeft = TSL.viewportTopLeft;\nconst viewportUV = TSL.viewportUV;\nconst wgsl = TSL.wgsl;\nconst wgslFn = TSL.wgslFn;\nconst workgroupArray = TSL.workgroupArray;\nconst workgroupBarrier = TSL.workgroupBarrier;\nconst workgroupId = TSL.workgroupId;\nconst workingToColorSpace = TSL.workingToColorSpace;\nconst xor = TSL.xor;\nexport { BRDF_GGX, BRDF_Lambert, BasicShadowFilter, Break, Continue, DFGApprox, D_GGX, Discard, EPSILON, F_Schlick, Fn, INFINITY, If, Loop, NodeAccess, NodeShaderStage, NodeType, NodeUpdateType, PCFShadowFilter, PCFSoftShadowFilter, PI, PI2, Return, Schlick_to_F0, ScriptableNodeResources, ShaderNode, TBNViewMatrix, VSMShadowFilter, V_GGX_SmithCorrelated, abs, acesFilmicToneMapping, acos, add, addNodeElement, agxToneMapping, all, alphaT, and, anisotropy, anisotropyB, anisotropyT, any, append, arrayBuffer, asin, assign, atan, atan2, atomicAdd, atomicAnd, atomicFunc, atomicMax, atomicMin, atomicOr, atomicStore, atomicSub, atomicXor, attenuationColor, attenuationDistance, attribute, attributeArray, backgroundBlurriness, backgroundIntensity, backgroundRotation, batch, billboarding, bitAnd, bitNot, bitOr, bitXor, bitangentGeometry, bitangentLocal, bitangentView, bitangentWorld, bitcast, blendBurn, blendColor, blendDodge, blendOverlay, blendScreen, blur, bool, buffer, bufferAttribute, bumpMap, burn, bvec2, bvec3, bvec4, bypass, cache, call, cameraFar, cameraNear, cameraNormalMatrix, cameraPosition, cameraProjectionMatrix, cameraProjectionMatrixInverse, cameraViewMatrix, cameraWorldMatrix, cbrt, cdl, ceil, checker, cineonToneMapping, clamp, clearcoat, clearcoatRoughness, code, color, colorSpaceToWorking, colorToDirection, compute, cond, context, convert, convertColorSpace, convertToTexture, cos, cross, cubeTexture, dFdx, dFdy, dashSize, defaultBuildStages, defaultShaderStages, defined, degrees, deltaTime, densityFog, densityFogFactor, depth, depthPass, difference, diffuseColor, directPointLight, directionToColor, dispersion, distance, div, dodge, dot, drawIndex, dynamicBufferAttribute, element, emissive, equal, equals, equirectUV, exp, exp2, expression, faceDirection, faceForward, faceforward, float, floor, fog, fract, frameGroup, frameId, frontFacing, fwidth, gain, gapSize, getConstNodeType, getCurrentStack, getDirection, getDistanceAttenuation, getGeometryRoughness, getNormalFromDepth, getParallaxCorrectNormal, getRoughness, getScreenPosition, getShIrradianceAt, getTextureIndex, getViewPosition, glsl, glslFn, grayscale, greaterThan, greaterThanEqual, hash, highpModelNormalViewMatrix, highpModelViewMatrix, hue, instance, instanceIndex, instancedArray, instancedBufferAttribute, instancedDynamicBufferAttribute, instancedMesh, int, inverseSqrt, inversesqrt, invocationLocalIndex, invocationSubgroupIndex, ior, iridescence, iridescenceIOR, iridescenceThickness, ivec2, ivec3, ivec4, js, label, length, lengthSq, lessThan, lessThanEqual, lightPosition, lightTargetDirection, lightTargetPosition, lightViewPosition, lightingContext, lights, linearDepth, linearToneMapping, localId, log, log2, logarithmicDepthToViewZ, loop, luminance, mat2, mat3, mat4, matcapUV, materialAO, materialAlphaTest, materialAnisotropy, materialAnisotropyVector, materialAttenuationColor, materialAttenuationDistance, materialClearcoat, materialClearcoatNormal, materialClearcoatRoughness, materialColor, materialDispersion, materialEmissive, materialIOR, materialIridescence, materialIridescenceIOR, materialIridescenceThickness, materialLightMap, materialLineDashOffset, materialLineDashSize, materialLineGapSize, materialLineScale, materialLineWidth, materialMetalness, materialNormal, materialOpacity, materialPointWidth, materialReference, materialReflectivity, materialRefractionRatio, materialRotation, materialRoughness, materialSheen, materialSheenRoughness, materialShininess, materialSpecular, materialSpecularColor, materialSpecularIntensity, materialSpecularStrength, materialThickness, materialTransmission, max, maxMipLevel, mediumpModelViewMatrix, metalness, min, mix, mixElement, mod, modInt, modelDirection, modelNormalMatrix, modelPosition, modelScale, modelViewMatrix, modelViewPosition, modelViewProjection, modelWorldMatrix, modelWorldMatrixInverse, morphReference, mrt, mul, mx_aastep, mx_cell_noise_float, mx_contrast, mx_fractal_noise_float, mx_fractal_noise_vec2, mx_fractal_noise_vec3, mx_fractal_noise_vec4, mx_hsvtorgb, mx_noise_float, mx_noise_vec3, mx_noise_vec4, mx_ramplr, mx_ramptb, mx_rgbtohsv, mx_safepower, mx_splitlr, mx_splittb, mx_srgb_texture_to_lin_rec709, mx_transform_uv, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3, negate, neutralToneMapping, nodeArray, nodeImmutable, nodeObject, nodeObjects, nodeProxy, normalFlat, normalGeometry, normalLocal, normalMap, normalView, normalWorld, normalize, not, notEqual, numWorkgroups, objectDirection, objectGroup, objectPosition, objectScale, objectViewPosition, objectWorldMatrix, oneMinus, or, orthographicDepthToViewZ, oscSawtooth, oscSine, oscSquare, oscTriangle, output, outputStruct, overlay, overloadingFn, parabola, parallaxDirection, parallaxUV, parameter, pass, passTexture, pcurve, perspectiveDepthToViewZ, pmremTexture, pointUV, pointWidth, positionGeometry, positionLocal, positionPrevious, positionView, positionViewDirection, positionWorld, positionWorldDirection, posterize, pow, pow2, pow3, pow4, property, radians, rand, range, rangeFog, rangeFogFactor, reciprocal, reference, referenceBuffer, reflect, reflectVector, reflectView, reflector, refract, refractVector, refractView, reinhardToneMapping, remainder, remap, remapClamp, renderGroup, renderOutput, rendererReference, rotate, rotateUV, roughness, round, rtt, sRGBTransferEOTF, sRGBTransferOETF, sampler, saturate, saturation, screen, screenCoordinate, screenSize, screenUV, scriptable, scriptableValue, select, setCurrentStack, shaderStages, shadow, shadowPositionWorld, sharedUniformGroup, sheen, sheenRoughness, shiftLeft, shiftRight, shininess, sign, sin, sinc, skinning, skinningReference, smoothstep, smoothstepElement, specularColor, specularF90, spherizeUV, split, spritesheetUV, sqrt, stack, step, storage, storageBarrier, storageObject, storageTexture, string, sub, subgroupIndex, subgroupSize, tan, tangentGeometry, tangentLocal, tangentView, tangentWorld, temp, texture, texture3D, textureBarrier, textureBicubic, textureCubeUV, textureLoad, textureSize, textureStore, thickness, threshold, time, timerDelta, timerGlobal, timerLocal, toOutputColorSpace, toWorkingColorSpace, toneMapping, toneMappingExposure, toonOutlinePass, transformDirection, transformNormal, transformNormalToView, transformedBentNormalView, transformedBitangentView, transformedBitangentWorld, transformedClearcoatNormalView, transformedNormalView, transformedNormalWorld, transformedTangentView, transformedTangentWorld, transmission, transpose, tri, tri3, triNoise3D, triplanarTexture, triplanarTextures, trunc, tslFn, uint, uniform, uniformArray, uniformGroup, uniforms, userData, uv, uvec2, uvec3, uvec4, varying, varyingProperty, vec2, vec3, vec4, vectorComponents, velocity, vertexColor, vertexIndex, vibrance, viewZToLogarithmicDepth, viewZToOrthographicDepth, viewZToPerspectiveDepth, viewport, viewportBottomLeft, viewportCoordinate, viewportDepthTexture, viewportLinearDepth, viewportMipTexture, viewportResolution, viewportSafeUV, viewportSharedTexture, viewportSize, viewportTexture, viewportTopLeft, viewportUV, wgsl, wgslFn, workgroupArray, workgroupBarrier, workgroupId, workingToColorSpace, xor };"],
  "mappings": "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",
  "names": []
}
